# Generated by Django 3.2.6 on 2024-12-20 07:17

import cardDatabase.models.Banlist
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cardDatabase', '0056_alter_card_rarity'),
    ]
    def initFormat(apps, schema_editor):
        Formats = apps.get_model('cardDatabase', 'Format')
        if not Formats.objects.filter(name='Custom').exists():
            format, created = Formats.objects.get_or_create(name='Custom')
            format.save()

    def updateDeckListZonesFromDeckFormat(apps, schema_editor):
        DeckLists = apps.get_model('cardDatabase', 'DeckList')
        Formats = apps.get_model('cardDatabase', 'Format')
        for row in DeckLists.objects.all():
            name = row.deck_type
            if(name=='ABC'):
                name = 'Arcana Battle Colosseum'
            row.deck_format = Formats.objects.get(name=name)
            row.save()

    operations = [
        migrations.AddField(
            model_name='decklist',
            name='deck_format',
            field=models.ForeignKey(default=cardDatabase.models.Banlist.Format.get_default, on_delete=django.db.models.deletion.CASCADE, to='cardDatabase.format'),
        ),
        migrations.AddField(
            model_name='decklistzone',
            name='format',
            field=models.ForeignKey(default=cardDatabase.models.Banlist.Format.get_default, on_delete=django.db.models.deletion.CASCADE, to='cardDatabase.format'),
        ),
        #Add Custom as Format
        migrations.RunPython(initFormat),
        #Update decklists to fill correct deck_format from existing deck_type
        migrations.RunPython(updateDeckListZonesFromDeckFormat),
        migrations.RemoveField(
            model_name='decklist',
            name='deck_type',
        ),
    ]
